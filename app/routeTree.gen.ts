/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TestImport } from './routes/test'
import { Route as LoginImport } from './routes/login'
import { Route as LearnerImport } from './routes/_learner'
import { Route as LearnerIndexImport } from './routes/_learner/index'
import { Route as XTodosImport } from './routes/x/todos'
import { Route as XSidebarImport } from './routes/x/sidebar'
import { Route as XProfilesImport } from './routes/x/profiles'
import { Route as XEditorDemoImport } from './routes/x/editor-demo'
import { Route as XDropdownImport } from './routes/x/dropdown'
import { Route as LearnerTasksImport } from './routes/_learner/tasks'
import { Route as LearnerExploreImport } from './routes/_learner/explore'
import { Route as LearnerChatImport } from './routes/_learner/chat'
import { Route as LearnerCalendarImport } from './routes/_learner/calendar'
import { Route as LearnerCommunitiesIndexImport } from './routes/_learner/communities/index'
import { Route as LearnerCommunitiesIdRouteImport } from './routes/_learner/communities/$id/route'
import { Route as LearnerEnrolmentsUidIndexImport } from './routes/_learner/enrolments/$uid.index'
import { Route as LearnerCommunitiesCreateIndexImport } from './routes/_learner/communities/create/index'
import { Route as LearnerCommunitiesIdIndexImport } from './routes/_learner/communities/$id/index'
import { Route as LearnerCommunitiesCreateCourseRouteImport } from './routes/_learner/communities/create/course/route'
import { Route as LearnerCommunitiesIdEventsRouteImport } from './routes/_learner/communities/$id/events/route'
import { Route as LearnerCommunitiesCreateCourseIndexImport } from './routes/_learner/communities/create/course/index'
import { Route as LearnerCommunitiesIdThreadsIndexImport } from './routes/_learner/communities/$id/threads/index'
import { Route as LearnerCommunitiesIdEventsIndexImport } from './routes/_learner/communities/$id/events/index'
import { Route as LearnerCommunitiesIdCoursesIndexImport } from './routes/_learner/communities/$id/courses/index'
import { Route as LearnerCommunitiesIdArticlesIndexImport } from './routes/_learner/communities/$id/articles/index'
import { Route as LearnerCommunitiesCreateCourseSelectCoursesImport } from './routes/_learner/communities/create/course/select-courses'
import { Route as LearnerCommunitiesCreateCoursePublishImport } from './routes/_learner/communities/create/course/publish'
import { Route as LearnerCommunitiesCreateCourseEnrolmentsImport } from './routes/_learner/communities/create/course/enrolments'
import { Route as LearnerCommunitiesCreateIdCommunityRouteImport } from './routes/_learner/communities/create/$id/community/route'
import { Route as LearnerCommunitiesIdCoursesCourseIdRouteImport } from './routes/_learner/communities/$id/courses/$courseId.route'
import { Route as LearnerCommunitiesCreateIdThreadIndexImport } from './routes/_learner/communities/create/$id/thread/index'
import { Route as LearnerCommunitiesCreateIdCommunityIndexImport } from './routes/_learner/communities/create/$id/community/index'
import { Route as LearnerCommunitiesIdThreadsThreadIdIndexImport } from './routes/_learner/communities/$id/threads/$threadId.index'
import { Route as LearnerCommunitiesIdCoursesCourseIdIndexImport } from './routes/_learner/communities/$id/courses/$courseId.index'
import { Route as LearnerCommunitiesCreateIdCommunitySettingsImport } from './routes/_learner/communities/create/$id/community/settings'
import { Route as LearnerCommunitiesCreateIdCommunityPublishImport } from './routes/_learner/communities/create/$id/community/publish'
import { Route as LearnerCommunitiesCreateIdCommunityMembersImport } from './routes/_learner/communities/create/$id/community/members'
import { Route as LearnerCommunitiesIdCoursesCourseIdEnrolmentsImport } from './routes/_learner/communities/$id/courses/$courseId.enrolments'

// Create/Update Routes

const TestRoute = TestImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const LearnerRoute = LearnerImport.update({
  id: '/_learner',
  getParentRoute: () => rootRoute,
} as any)

const LearnerIndexRoute = LearnerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LearnerRoute,
} as any)

const XTodosRoute = XTodosImport.update({
  id: '/x/todos',
  path: '/x/todos',
  getParentRoute: () => rootRoute,
} as any)

const XSidebarRoute = XSidebarImport.update({
  id: '/x/sidebar',
  path: '/x/sidebar',
  getParentRoute: () => rootRoute,
} as any)

const XProfilesRoute = XProfilesImport.update({
  id: '/x/profiles',
  path: '/x/profiles',
  getParentRoute: () => rootRoute,
} as any)

const XEditorDemoRoute = XEditorDemoImport.update({
  id: '/x/editor-demo',
  path: '/x/editor-demo',
  getParentRoute: () => rootRoute,
} as any)

const XDropdownRoute = XDropdownImport.update({
  id: '/x/dropdown',
  path: '/x/dropdown',
  getParentRoute: () => rootRoute,
} as any)

const LearnerTasksRoute = LearnerTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerExploreRoute = LearnerExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerChatRoute = LearnerChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerCalendarRoute = LearnerCalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerCommunitiesIndexRoute = LearnerCommunitiesIndexImport.update({
  id: '/communities/',
  path: '/communities/',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerCommunitiesIdRouteRoute = LearnerCommunitiesIdRouteImport.update({
  id: '/communities/$id',
  path: '/communities/$id',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerEnrolmentsUidIndexRoute = LearnerEnrolmentsUidIndexImport.update({
  id: '/enrolments/$uid/',
  path: '/enrolments/$uid/',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerCommunitiesCreateIndexRoute =
  LearnerCommunitiesCreateIndexImport.update({
    id: '/communities/create/',
    path: '/communities/create/',
    getParentRoute: () => LearnerRoute,
  } as any)

const LearnerCommunitiesIdIndexRoute = LearnerCommunitiesIdIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LearnerCommunitiesIdRouteRoute,
} as any)

const LearnerCommunitiesCreateCourseRouteRoute =
  LearnerCommunitiesCreateCourseRouteImport.update({
    id: '/communities/create/course',
    path: '/communities/create/course',
    getParentRoute: () => LearnerRoute,
  } as any)

const LearnerCommunitiesIdEventsRouteRoute =
  LearnerCommunitiesIdEventsRouteImport.update({
    id: '/events',
    path: '/events',
    getParentRoute: () => LearnerCommunitiesIdRouteRoute,
  } as any)

const LearnerCommunitiesCreateCourseIndexRoute =
  LearnerCommunitiesCreateCourseIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LearnerCommunitiesCreateCourseRouteRoute,
  } as any)

const LearnerCommunitiesIdThreadsIndexRoute =
  LearnerCommunitiesIdThreadsIndexImport.update({
    id: '/threads/',
    path: '/threads/',
    getParentRoute: () => LearnerCommunitiesIdRouteRoute,
  } as any)

const LearnerCommunitiesIdEventsIndexRoute =
  LearnerCommunitiesIdEventsIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LearnerCommunitiesIdEventsRouteRoute,
  } as any)

const LearnerCommunitiesIdCoursesIndexRoute =
  LearnerCommunitiesIdCoursesIndexImport.update({
    id: '/courses/',
    path: '/courses/',
    getParentRoute: () => LearnerCommunitiesIdRouteRoute,
  } as any)

const LearnerCommunitiesIdArticlesIndexRoute =
  LearnerCommunitiesIdArticlesIndexImport.update({
    id: '/articles/',
    path: '/articles/',
    getParentRoute: () => LearnerCommunitiesIdRouteRoute,
  } as any)

const LearnerCommunitiesCreateCourseSelectCoursesRoute =
  LearnerCommunitiesCreateCourseSelectCoursesImport.update({
    id: '/select-courses',
    path: '/select-courses',
    getParentRoute: () => LearnerCommunitiesCreateCourseRouteRoute,
  } as any)

const LearnerCommunitiesCreateCoursePublishRoute =
  LearnerCommunitiesCreateCoursePublishImport.update({
    id: '/publish',
    path: '/publish',
    getParentRoute: () => LearnerCommunitiesCreateCourseRouteRoute,
  } as any)

const LearnerCommunitiesCreateCourseEnrolmentsRoute =
  LearnerCommunitiesCreateCourseEnrolmentsImport.update({
    id: '/enrolments',
    path: '/enrolments',
    getParentRoute: () => LearnerCommunitiesCreateCourseRouteRoute,
  } as any)

const LearnerCommunitiesCreateIdCommunityRouteRoute =
  LearnerCommunitiesCreateIdCommunityRouteImport.update({
    id: '/communities/create/$id/community',
    path: '/communities/create/$id/community',
    getParentRoute: () => LearnerRoute,
  } as any)

const LearnerCommunitiesIdCoursesCourseIdRouteRoute =
  LearnerCommunitiesIdCoursesCourseIdRouteImport.update({
    id: '/courses/$courseId',
    path: '/courses/$courseId',
    getParentRoute: () => LearnerCommunitiesIdRouteRoute,
  } as any)

const LearnerCommunitiesCreateIdThreadIndexRoute =
  LearnerCommunitiesCreateIdThreadIndexImport.update({
    id: '/communities/create/$id/thread/',
    path: '/communities/create/$id/thread/',
    getParentRoute: () => LearnerRoute,
  } as any)

const LearnerCommunitiesCreateIdCommunityIndexRoute =
  LearnerCommunitiesCreateIdCommunityIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LearnerCommunitiesCreateIdCommunityRouteRoute,
  } as any)

const LearnerCommunitiesIdThreadsThreadIdIndexRoute =
  LearnerCommunitiesIdThreadsThreadIdIndexImport.update({
    id: '/threads/$threadId/',
    path: '/threads/$threadId/',
    getParentRoute: () => LearnerCommunitiesIdRouteRoute,
  } as any)

const LearnerCommunitiesIdCoursesCourseIdIndexRoute =
  LearnerCommunitiesIdCoursesCourseIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LearnerCommunitiesIdCoursesCourseIdRouteRoute,
  } as any)

const LearnerCommunitiesCreateIdCommunitySettingsRoute =
  LearnerCommunitiesCreateIdCommunitySettingsImport.update({
    id: '/settings',
    path: '/settings',
    getParentRoute: () => LearnerCommunitiesCreateIdCommunityRouteRoute,
  } as any)

const LearnerCommunitiesCreateIdCommunityPublishRoute =
  LearnerCommunitiesCreateIdCommunityPublishImport.update({
    id: '/publish',
    path: '/publish',
    getParentRoute: () => LearnerCommunitiesCreateIdCommunityRouteRoute,
  } as any)

const LearnerCommunitiesCreateIdCommunityMembersRoute =
  LearnerCommunitiesCreateIdCommunityMembersImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => LearnerCommunitiesCreateIdCommunityRouteRoute,
  } as any)

const LearnerCommunitiesIdCoursesCourseIdEnrolmentsRoute =
  LearnerCommunitiesIdCoursesCourseIdEnrolmentsImport.update({
    id: '/enrolments',
    path: '/enrolments',
    getParentRoute: () => LearnerCommunitiesIdCoursesCourseIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_learner': {
      id: '/_learner'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LearnerImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestImport
      parentRoute: typeof rootRoute
    }
    '/_learner/calendar': {
      id: '/_learner/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof LearnerCalendarImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/chat': {
      id: '/_learner/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof LearnerChatImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/explore': {
      id: '/_learner/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof LearnerExploreImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/tasks': {
      id: '/_learner/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof LearnerTasksImport
      parentRoute: typeof LearnerImport
    }
    '/x/dropdown': {
      id: '/x/dropdown'
      path: '/x/dropdown'
      fullPath: '/x/dropdown'
      preLoaderRoute: typeof XDropdownImport
      parentRoute: typeof rootRoute
    }
    '/x/editor-demo': {
      id: '/x/editor-demo'
      path: '/x/editor-demo'
      fullPath: '/x/editor-demo'
      preLoaderRoute: typeof XEditorDemoImport
      parentRoute: typeof rootRoute
    }
    '/x/profiles': {
      id: '/x/profiles'
      path: '/x/profiles'
      fullPath: '/x/profiles'
      preLoaderRoute: typeof XProfilesImport
      parentRoute: typeof rootRoute
    }
    '/x/sidebar': {
      id: '/x/sidebar'
      path: '/x/sidebar'
      fullPath: '/x/sidebar'
      preLoaderRoute: typeof XSidebarImport
      parentRoute: typeof rootRoute
    }
    '/x/todos': {
      id: '/x/todos'
      path: '/x/todos'
      fullPath: '/x/todos'
      preLoaderRoute: typeof XTodosImport
      parentRoute: typeof rootRoute
    }
    '/_learner/': {
      id: '/_learner/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LearnerIndexImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/communities/$id': {
      id: '/_learner/communities/$id'
      path: '/communities/$id'
      fullPath: '/communities/$id'
      preLoaderRoute: typeof LearnerCommunitiesIdRouteImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/communities/': {
      id: '/_learner/communities/'
      path: '/communities'
      fullPath: '/communities'
      preLoaderRoute: typeof LearnerCommunitiesIndexImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/communities/$id/events': {
      id: '/_learner/communities/$id/events'
      path: '/events'
      fullPath: '/communities/$id/events'
      preLoaderRoute: typeof LearnerCommunitiesIdEventsRouteImport
      parentRoute: typeof LearnerCommunitiesIdRouteImport
    }
    '/_learner/communities/create/course': {
      id: '/_learner/communities/create/course'
      path: '/communities/create/course'
      fullPath: '/communities/create/course'
      preLoaderRoute: typeof LearnerCommunitiesCreateCourseRouteImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/communities/$id/': {
      id: '/_learner/communities/$id/'
      path: '/'
      fullPath: '/communities/$id/'
      preLoaderRoute: typeof LearnerCommunitiesIdIndexImport
      parentRoute: typeof LearnerCommunitiesIdRouteImport
    }
    '/_learner/communities/create/': {
      id: '/_learner/communities/create/'
      path: '/communities/create'
      fullPath: '/communities/create'
      preLoaderRoute: typeof LearnerCommunitiesCreateIndexImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/enrolments/$uid/': {
      id: '/_learner/enrolments/$uid/'
      path: '/enrolments/$uid'
      fullPath: '/enrolments/$uid'
      preLoaderRoute: typeof LearnerEnrolmentsUidIndexImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/communities/$id/courses/$courseId': {
      id: '/_learner/communities/$id/courses/$courseId'
      path: '/courses/$courseId'
      fullPath: '/communities/$id/courses/$courseId'
      preLoaderRoute: typeof LearnerCommunitiesIdCoursesCourseIdRouteImport
      parentRoute: typeof LearnerCommunitiesIdRouteImport
    }
    '/_learner/communities/create/$id/community': {
      id: '/_learner/communities/create/$id/community'
      path: '/communities/create/$id/community'
      fullPath: '/communities/create/$id/community'
      preLoaderRoute: typeof LearnerCommunitiesCreateIdCommunityRouteImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/communities/create/course/enrolments': {
      id: '/_learner/communities/create/course/enrolments'
      path: '/enrolments'
      fullPath: '/communities/create/course/enrolments'
      preLoaderRoute: typeof LearnerCommunitiesCreateCourseEnrolmentsImport
      parentRoute: typeof LearnerCommunitiesCreateCourseRouteImport
    }
    '/_learner/communities/create/course/publish': {
      id: '/_learner/communities/create/course/publish'
      path: '/publish'
      fullPath: '/communities/create/course/publish'
      preLoaderRoute: typeof LearnerCommunitiesCreateCoursePublishImport
      parentRoute: typeof LearnerCommunitiesCreateCourseRouteImport
    }
    '/_learner/communities/create/course/select-courses': {
      id: '/_learner/communities/create/course/select-courses'
      path: '/select-courses'
      fullPath: '/communities/create/course/select-courses'
      preLoaderRoute: typeof LearnerCommunitiesCreateCourseSelectCoursesImport
      parentRoute: typeof LearnerCommunitiesCreateCourseRouteImport
    }
    '/_learner/communities/$id/articles/': {
      id: '/_learner/communities/$id/articles/'
      path: '/articles'
      fullPath: '/communities/$id/articles'
      preLoaderRoute: typeof LearnerCommunitiesIdArticlesIndexImport
      parentRoute: typeof LearnerCommunitiesIdRouteImport
    }
    '/_learner/communities/$id/courses/': {
      id: '/_learner/communities/$id/courses/'
      path: '/courses'
      fullPath: '/communities/$id/courses'
      preLoaderRoute: typeof LearnerCommunitiesIdCoursesIndexImport
      parentRoute: typeof LearnerCommunitiesIdRouteImport
    }
    '/_learner/communities/$id/events/': {
      id: '/_learner/communities/$id/events/'
      path: '/'
      fullPath: '/communities/$id/events/'
      preLoaderRoute: typeof LearnerCommunitiesIdEventsIndexImport
      parentRoute: typeof LearnerCommunitiesIdEventsRouteImport
    }
    '/_learner/communities/$id/threads/': {
      id: '/_learner/communities/$id/threads/'
      path: '/threads'
      fullPath: '/communities/$id/threads'
      preLoaderRoute: typeof LearnerCommunitiesIdThreadsIndexImport
      parentRoute: typeof LearnerCommunitiesIdRouteImport
    }
    '/_learner/communities/create/course/': {
      id: '/_learner/communities/create/course/'
      path: '/'
      fullPath: '/communities/create/course/'
      preLoaderRoute: typeof LearnerCommunitiesCreateCourseIndexImport
      parentRoute: typeof LearnerCommunitiesCreateCourseRouteImport
    }
    '/_learner/communities/$id/courses/$courseId/enrolments': {
      id: '/_learner/communities/$id/courses/$courseId/enrolments'
      path: '/enrolments'
      fullPath: '/communities/$id/courses/$courseId/enrolments'
      preLoaderRoute: typeof LearnerCommunitiesIdCoursesCourseIdEnrolmentsImport
      parentRoute: typeof LearnerCommunitiesIdCoursesCourseIdRouteImport
    }
    '/_learner/communities/create/$id/community/members': {
      id: '/_learner/communities/create/$id/community/members'
      path: '/members'
      fullPath: '/communities/create/$id/community/members'
      preLoaderRoute: typeof LearnerCommunitiesCreateIdCommunityMembersImport
      parentRoute: typeof LearnerCommunitiesCreateIdCommunityRouteImport
    }
    '/_learner/communities/create/$id/community/publish': {
      id: '/_learner/communities/create/$id/community/publish'
      path: '/publish'
      fullPath: '/communities/create/$id/community/publish'
      preLoaderRoute: typeof LearnerCommunitiesCreateIdCommunityPublishImport
      parentRoute: typeof LearnerCommunitiesCreateIdCommunityRouteImport
    }
    '/_learner/communities/create/$id/community/settings': {
      id: '/_learner/communities/create/$id/community/settings'
      path: '/settings'
      fullPath: '/communities/create/$id/community/settings'
      preLoaderRoute: typeof LearnerCommunitiesCreateIdCommunitySettingsImport
      parentRoute: typeof LearnerCommunitiesCreateIdCommunityRouteImport
    }
    '/_learner/communities/$id/courses/$courseId/': {
      id: '/_learner/communities/$id/courses/$courseId/'
      path: '/'
      fullPath: '/communities/$id/courses/$courseId/'
      preLoaderRoute: typeof LearnerCommunitiesIdCoursesCourseIdIndexImport
      parentRoute: typeof LearnerCommunitiesIdCoursesCourseIdRouteImport
    }
    '/_learner/communities/$id/threads/$threadId/': {
      id: '/_learner/communities/$id/threads/$threadId/'
      path: '/threads/$threadId'
      fullPath: '/communities/$id/threads/$threadId'
      preLoaderRoute: typeof LearnerCommunitiesIdThreadsThreadIdIndexImport
      parentRoute: typeof LearnerCommunitiesIdRouteImport
    }
    '/_learner/communities/create/$id/community/': {
      id: '/_learner/communities/create/$id/community/'
      path: '/'
      fullPath: '/communities/create/$id/community/'
      preLoaderRoute: typeof LearnerCommunitiesCreateIdCommunityIndexImport
      parentRoute: typeof LearnerCommunitiesCreateIdCommunityRouteImport
    }
    '/_learner/communities/create/$id/thread/': {
      id: '/_learner/communities/create/$id/thread/'
      path: '/communities/create/$id/thread'
      fullPath: '/communities/create/$id/thread'
      preLoaderRoute: typeof LearnerCommunitiesCreateIdThreadIndexImport
      parentRoute: typeof LearnerImport
    }
  }
}

// Create and export the route tree

interface LearnerCommunitiesIdEventsRouteRouteChildren {
  LearnerCommunitiesIdEventsIndexRoute: typeof LearnerCommunitiesIdEventsIndexRoute
}

const LearnerCommunitiesIdEventsRouteRouteChildren: LearnerCommunitiesIdEventsRouteRouteChildren =
  {
    LearnerCommunitiesIdEventsIndexRoute: LearnerCommunitiesIdEventsIndexRoute,
  }

const LearnerCommunitiesIdEventsRouteRouteWithChildren =
  LearnerCommunitiesIdEventsRouteRoute._addFileChildren(
    LearnerCommunitiesIdEventsRouteRouteChildren,
  )

interface LearnerCommunitiesIdCoursesCourseIdRouteRouteChildren {
  LearnerCommunitiesIdCoursesCourseIdEnrolmentsRoute: typeof LearnerCommunitiesIdCoursesCourseIdEnrolmentsRoute
  LearnerCommunitiesIdCoursesCourseIdIndexRoute: typeof LearnerCommunitiesIdCoursesCourseIdIndexRoute
}

const LearnerCommunitiesIdCoursesCourseIdRouteRouteChildren: LearnerCommunitiesIdCoursesCourseIdRouteRouteChildren =
  {
    LearnerCommunitiesIdCoursesCourseIdEnrolmentsRoute:
      LearnerCommunitiesIdCoursesCourseIdEnrolmentsRoute,
    LearnerCommunitiesIdCoursesCourseIdIndexRoute:
      LearnerCommunitiesIdCoursesCourseIdIndexRoute,
  }

const LearnerCommunitiesIdCoursesCourseIdRouteRouteWithChildren =
  LearnerCommunitiesIdCoursesCourseIdRouteRoute._addFileChildren(
    LearnerCommunitiesIdCoursesCourseIdRouteRouteChildren,
  )

interface LearnerCommunitiesIdRouteRouteChildren {
  LearnerCommunitiesIdEventsRouteRoute: typeof LearnerCommunitiesIdEventsRouteRouteWithChildren
  LearnerCommunitiesIdIndexRoute: typeof LearnerCommunitiesIdIndexRoute
  LearnerCommunitiesIdCoursesCourseIdRouteRoute: typeof LearnerCommunitiesIdCoursesCourseIdRouteRouteWithChildren
  LearnerCommunitiesIdArticlesIndexRoute: typeof LearnerCommunitiesIdArticlesIndexRoute
  LearnerCommunitiesIdCoursesIndexRoute: typeof LearnerCommunitiesIdCoursesIndexRoute
  LearnerCommunitiesIdThreadsIndexRoute: typeof LearnerCommunitiesIdThreadsIndexRoute
  LearnerCommunitiesIdThreadsThreadIdIndexRoute: typeof LearnerCommunitiesIdThreadsThreadIdIndexRoute
}

const LearnerCommunitiesIdRouteRouteChildren: LearnerCommunitiesIdRouteRouteChildren =
  {
    LearnerCommunitiesIdEventsRouteRoute:
      LearnerCommunitiesIdEventsRouteRouteWithChildren,
    LearnerCommunitiesIdIndexRoute: LearnerCommunitiesIdIndexRoute,
    LearnerCommunitiesIdCoursesCourseIdRouteRoute:
      LearnerCommunitiesIdCoursesCourseIdRouteRouteWithChildren,
    LearnerCommunitiesIdArticlesIndexRoute:
      LearnerCommunitiesIdArticlesIndexRoute,
    LearnerCommunitiesIdCoursesIndexRoute:
      LearnerCommunitiesIdCoursesIndexRoute,
    LearnerCommunitiesIdThreadsIndexRoute:
      LearnerCommunitiesIdThreadsIndexRoute,
    LearnerCommunitiesIdThreadsThreadIdIndexRoute:
      LearnerCommunitiesIdThreadsThreadIdIndexRoute,
  }

const LearnerCommunitiesIdRouteRouteWithChildren =
  LearnerCommunitiesIdRouteRoute._addFileChildren(
    LearnerCommunitiesIdRouteRouteChildren,
  )

interface LearnerCommunitiesCreateCourseRouteRouteChildren {
  LearnerCommunitiesCreateCourseEnrolmentsRoute: typeof LearnerCommunitiesCreateCourseEnrolmentsRoute
  LearnerCommunitiesCreateCoursePublishRoute: typeof LearnerCommunitiesCreateCoursePublishRoute
  LearnerCommunitiesCreateCourseSelectCoursesRoute: typeof LearnerCommunitiesCreateCourseSelectCoursesRoute
  LearnerCommunitiesCreateCourseIndexRoute: typeof LearnerCommunitiesCreateCourseIndexRoute
}

const LearnerCommunitiesCreateCourseRouteRouteChildren: LearnerCommunitiesCreateCourseRouteRouteChildren =
  {
    LearnerCommunitiesCreateCourseEnrolmentsRoute:
      LearnerCommunitiesCreateCourseEnrolmentsRoute,
    LearnerCommunitiesCreateCoursePublishRoute:
      LearnerCommunitiesCreateCoursePublishRoute,
    LearnerCommunitiesCreateCourseSelectCoursesRoute:
      LearnerCommunitiesCreateCourseSelectCoursesRoute,
    LearnerCommunitiesCreateCourseIndexRoute:
      LearnerCommunitiesCreateCourseIndexRoute,
  }

const LearnerCommunitiesCreateCourseRouteRouteWithChildren =
  LearnerCommunitiesCreateCourseRouteRoute._addFileChildren(
    LearnerCommunitiesCreateCourseRouteRouteChildren,
  )

interface LearnerCommunitiesCreateIdCommunityRouteRouteChildren {
  LearnerCommunitiesCreateIdCommunityMembersRoute: typeof LearnerCommunitiesCreateIdCommunityMembersRoute
  LearnerCommunitiesCreateIdCommunityPublishRoute: typeof LearnerCommunitiesCreateIdCommunityPublishRoute
  LearnerCommunitiesCreateIdCommunitySettingsRoute: typeof LearnerCommunitiesCreateIdCommunitySettingsRoute
  LearnerCommunitiesCreateIdCommunityIndexRoute: typeof LearnerCommunitiesCreateIdCommunityIndexRoute
}

const LearnerCommunitiesCreateIdCommunityRouteRouteChildren: LearnerCommunitiesCreateIdCommunityRouteRouteChildren =
  {
    LearnerCommunitiesCreateIdCommunityMembersRoute:
      LearnerCommunitiesCreateIdCommunityMembersRoute,
    LearnerCommunitiesCreateIdCommunityPublishRoute:
      LearnerCommunitiesCreateIdCommunityPublishRoute,
    LearnerCommunitiesCreateIdCommunitySettingsRoute:
      LearnerCommunitiesCreateIdCommunitySettingsRoute,
    LearnerCommunitiesCreateIdCommunityIndexRoute:
      LearnerCommunitiesCreateIdCommunityIndexRoute,
  }

const LearnerCommunitiesCreateIdCommunityRouteRouteWithChildren =
  LearnerCommunitiesCreateIdCommunityRouteRoute._addFileChildren(
    LearnerCommunitiesCreateIdCommunityRouteRouteChildren,
  )

interface LearnerRouteChildren {
  LearnerCalendarRoute: typeof LearnerCalendarRoute
  LearnerChatRoute: typeof LearnerChatRoute
  LearnerExploreRoute: typeof LearnerExploreRoute
  LearnerTasksRoute: typeof LearnerTasksRoute
  LearnerIndexRoute: typeof LearnerIndexRoute
  LearnerCommunitiesIdRouteRoute: typeof LearnerCommunitiesIdRouteRouteWithChildren
  LearnerCommunitiesIndexRoute: typeof LearnerCommunitiesIndexRoute
  LearnerCommunitiesCreateCourseRouteRoute: typeof LearnerCommunitiesCreateCourseRouteRouteWithChildren
  LearnerCommunitiesCreateIndexRoute: typeof LearnerCommunitiesCreateIndexRoute
  LearnerEnrolmentsUidIndexRoute: typeof LearnerEnrolmentsUidIndexRoute
  LearnerCommunitiesCreateIdCommunityRouteRoute: typeof LearnerCommunitiesCreateIdCommunityRouteRouteWithChildren
  LearnerCommunitiesCreateIdThreadIndexRoute: typeof LearnerCommunitiesCreateIdThreadIndexRoute
}

const LearnerRouteChildren: LearnerRouteChildren = {
  LearnerCalendarRoute: LearnerCalendarRoute,
  LearnerChatRoute: LearnerChatRoute,
  LearnerExploreRoute: LearnerExploreRoute,
  LearnerTasksRoute: LearnerTasksRoute,
  LearnerIndexRoute: LearnerIndexRoute,
  LearnerCommunitiesIdRouteRoute: LearnerCommunitiesIdRouteRouteWithChildren,
  LearnerCommunitiesIndexRoute: LearnerCommunitiesIndexRoute,
  LearnerCommunitiesCreateCourseRouteRoute:
    LearnerCommunitiesCreateCourseRouteRouteWithChildren,
  LearnerCommunitiesCreateIndexRoute: LearnerCommunitiesCreateIndexRoute,
  LearnerEnrolmentsUidIndexRoute: LearnerEnrolmentsUidIndexRoute,
  LearnerCommunitiesCreateIdCommunityRouteRoute:
    LearnerCommunitiesCreateIdCommunityRouteRouteWithChildren,
  LearnerCommunitiesCreateIdThreadIndexRoute:
    LearnerCommunitiesCreateIdThreadIndexRoute,
}

const LearnerRouteWithChildren =
  LearnerRoute._addFileChildren(LearnerRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LearnerRouteWithChildren
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/calendar': typeof LearnerCalendarRoute
  '/chat': typeof LearnerChatRoute
  '/explore': typeof LearnerExploreRoute
  '/tasks': typeof LearnerTasksRoute
  '/x/dropdown': typeof XDropdownRoute
  '/x/editor-demo': typeof XEditorDemoRoute
  '/x/profiles': typeof XProfilesRoute
  '/x/sidebar': typeof XSidebarRoute
  '/x/todos': typeof XTodosRoute
  '/': typeof LearnerIndexRoute
  '/communities/$id': typeof LearnerCommunitiesIdRouteRouteWithChildren
  '/communities': typeof LearnerCommunitiesIndexRoute
  '/communities/$id/events': typeof LearnerCommunitiesIdEventsRouteRouteWithChildren
  '/communities/create/course': typeof LearnerCommunitiesCreateCourseRouteRouteWithChildren
  '/communities/$id/': typeof LearnerCommunitiesIdIndexRoute
  '/communities/create': typeof LearnerCommunitiesCreateIndexRoute
  '/enrolments/$uid': typeof LearnerEnrolmentsUidIndexRoute
  '/communities/$id/courses/$courseId': typeof LearnerCommunitiesIdCoursesCourseIdRouteRouteWithChildren
  '/communities/create/$id/community': typeof LearnerCommunitiesCreateIdCommunityRouteRouteWithChildren
  '/communities/create/course/enrolments': typeof LearnerCommunitiesCreateCourseEnrolmentsRoute
  '/communities/create/course/publish': typeof LearnerCommunitiesCreateCoursePublishRoute
  '/communities/create/course/select-courses': typeof LearnerCommunitiesCreateCourseSelectCoursesRoute
  '/communities/$id/articles': typeof LearnerCommunitiesIdArticlesIndexRoute
  '/communities/$id/courses': typeof LearnerCommunitiesIdCoursesIndexRoute
  '/communities/$id/events/': typeof LearnerCommunitiesIdEventsIndexRoute
  '/communities/$id/threads': typeof LearnerCommunitiesIdThreadsIndexRoute
  '/communities/create/course/': typeof LearnerCommunitiesCreateCourseIndexRoute
  '/communities/$id/courses/$courseId/enrolments': typeof LearnerCommunitiesIdCoursesCourseIdEnrolmentsRoute
  '/communities/create/$id/community/members': typeof LearnerCommunitiesCreateIdCommunityMembersRoute
  '/communities/create/$id/community/publish': typeof LearnerCommunitiesCreateIdCommunityPublishRoute
  '/communities/create/$id/community/settings': typeof LearnerCommunitiesCreateIdCommunitySettingsRoute
  '/communities/$id/courses/$courseId/': typeof LearnerCommunitiesIdCoursesCourseIdIndexRoute
  '/communities/$id/threads/$threadId': typeof LearnerCommunitiesIdThreadsThreadIdIndexRoute
  '/communities/create/$id/community/': typeof LearnerCommunitiesCreateIdCommunityIndexRoute
  '/communities/create/$id/thread': typeof LearnerCommunitiesCreateIdThreadIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/calendar': typeof LearnerCalendarRoute
  '/chat': typeof LearnerChatRoute
  '/explore': typeof LearnerExploreRoute
  '/tasks': typeof LearnerTasksRoute
  '/x/dropdown': typeof XDropdownRoute
  '/x/editor-demo': typeof XEditorDemoRoute
  '/x/profiles': typeof XProfilesRoute
  '/x/sidebar': typeof XSidebarRoute
  '/x/todos': typeof XTodosRoute
  '/': typeof LearnerIndexRoute
  '/communities': typeof LearnerCommunitiesIndexRoute
  '/communities/$id': typeof LearnerCommunitiesIdIndexRoute
  '/communities/create': typeof LearnerCommunitiesCreateIndexRoute
  '/enrolments/$uid': typeof LearnerEnrolmentsUidIndexRoute
  '/communities/create/course/enrolments': typeof LearnerCommunitiesCreateCourseEnrolmentsRoute
  '/communities/create/course/publish': typeof LearnerCommunitiesCreateCoursePublishRoute
  '/communities/create/course/select-courses': typeof LearnerCommunitiesCreateCourseSelectCoursesRoute
  '/communities/$id/articles': typeof LearnerCommunitiesIdArticlesIndexRoute
  '/communities/$id/courses': typeof LearnerCommunitiesIdCoursesIndexRoute
  '/communities/$id/events': typeof LearnerCommunitiesIdEventsIndexRoute
  '/communities/$id/threads': typeof LearnerCommunitiesIdThreadsIndexRoute
  '/communities/create/course': typeof LearnerCommunitiesCreateCourseIndexRoute
  '/communities/$id/courses/$courseId/enrolments': typeof LearnerCommunitiesIdCoursesCourseIdEnrolmentsRoute
  '/communities/create/$id/community/members': typeof LearnerCommunitiesCreateIdCommunityMembersRoute
  '/communities/create/$id/community/publish': typeof LearnerCommunitiesCreateIdCommunityPublishRoute
  '/communities/create/$id/community/settings': typeof LearnerCommunitiesCreateIdCommunitySettingsRoute
  '/communities/$id/courses/$courseId': typeof LearnerCommunitiesIdCoursesCourseIdIndexRoute
  '/communities/$id/threads/$threadId': typeof LearnerCommunitiesIdThreadsThreadIdIndexRoute
  '/communities/create/$id/community': typeof LearnerCommunitiesCreateIdCommunityIndexRoute
  '/communities/create/$id/thread': typeof LearnerCommunitiesCreateIdThreadIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_learner': typeof LearnerRouteWithChildren
  '/login': typeof LoginRoute
  '/test': typeof TestRoute
  '/_learner/calendar': typeof LearnerCalendarRoute
  '/_learner/chat': typeof LearnerChatRoute
  '/_learner/explore': typeof LearnerExploreRoute
  '/_learner/tasks': typeof LearnerTasksRoute
  '/x/dropdown': typeof XDropdownRoute
  '/x/editor-demo': typeof XEditorDemoRoute
  '/x/profiles': typeof XProfilesRoute
  '/x/sidebar': typeof XSidebarRoute
  '/x/todos': typeof XTodosRoute
  '/_learner/': typeof LearnerIndexRoute
  '/_learner/communities/$id': typeof LearnerCommunitiesIdRouteRouteWithChildren
  '/_learner/communities/': typeof LearnerCommunitiesIndexRoute
  '/_learner/communities/$id/events': typeof LearnerCommunitiesIdEventsRouteRouteWithChildren
  '/_learner/communities/create/course': typeof LearnerCommunitiesCreateCourseRouteRouteWithChildren
  '/_learner/communities/$id/': typeof LearnerCommunitiesIdIndexRoute
  '/_learner/communities/create/': typeof LearnerCommunitiesCreateIndexRoute
  '/_learner/enrolments/$uid/': typeof LearnerEnrolmentsUidIndexRoute
  '/_learner/communities/$id/courses/$courseId': typeof LearnerCommunitiesIdCoursesCourseIdRouteRouteWithChildren
  '/_learner/communities/create/$id/community': typeof LearnerCommunitiesCreateIdCommunityRouteRouteWithChildren
  '/_learner/communities/create/course/enrolments': typeof LearnerCommunitiesCreateCourseEnrolmentsRoute
  '/_learner/communities/create/course/publish': typeof LearnerCommunitiesCreateCoursePublishRoute
  '/_learner/communities/create/course/select-courses': typeof LearnerCommunitiesCreateCourseSelectCoursesRoute
  '/_learner/communities/$id/articles/': typeof LearnerCommunitiesIdArticlesIndexRoute
  '/_learner/communities/$id/courses/': typeof LearnerCommunitiesIdCoursesIndexRoute
  '/_learner/communities/$id/events/': typeof LearnerCommunitiesIdEventsIndexRoute
  '/_learner/communities/$id/threads/': typeof LearnerCommunitiesIdThreadsIndexRoute
  '/_learner/communities/create/course/': typeof LearnerCommunitiesCreateCourseIndexRoute
  '/_learner/communities/$id/courses/$courseId/enrolments': typeof LearnerCommunitiesIdCoursesCourseIdEnrolmentsRoute
  '/_learner/communities/create/$id/community/members': typeof LearnerCommunitiesCreateIdCommunityMembersRoute
  '/_learner/communities/create/$id/community/publish': typeof LearnerCommunitiesCreateIdCommunityPublishRoute
  '/_learner/communities/create/$id/community/settings': typeof LearnerCommunitiesCreateIdCommunitySettingsRoute
  '/_learner/communities/$id/courses/$courseId/': typeof LearnerCommunitiesIdCoursesCourseIdIndexRoute
  '/_learner/communities/$id/threads/$threadId/': typeof LearnerCommunitiesIdThreadsThreadIdIndexRoute
  '/_learner/communities/create/$id/community/': typeof LearnerCommunitiesCreateIdCommunityIndexRoute
  '/_learner/communities/create/$id/thread/': typeof LearnerCommunitiesCreateIdThreadIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/test'
    | '/calendar'
    | '/chat'
    | '/explore'
    | '/tasks'
    | '/x/dropdown'
    | '/x/editor-demo'
    | '/x/profiles'
    | '/x/sidebar'
    | '/x/todos'
    | '/'
    | '/communities/$id'
    | '/communities'
    | '/communities/$id/events'
    | '/communities/create/course'
    | '/communities/$id/'
    | '/communities/create'
    | '/enrolments/$uid'
    | '/communities/$id/courses/$courseId'
    | '/communities/create/$id/community'
    | '/communities/create/course/enrolments'
    | '/communities/create/course/publish'
    | '/communities/create/course/select-courses'
    | '/communities/$id/articles'
    | '/communities/$id/courses'
    | '/communities/$id/events/'
    | '/communities/$id/threads'
    | '/communities/create/course/'
    | '/communities/$id/courses/$courseId/enrolments'
    | '/communities/create/$id/community/members'
    | '/communities/create/$id/community/publish'
    | '/communities/create/$id/community/settings'
    | '/communities/$id/courses/$courseId/'
    | '/communities/$id/threads/$threadId'
    | '/communities/create/$id/community/'
    | '/communities/create/$id/thread'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/test'
    | '/calendar'
    | '/chat'
    | '/explore'
    | '/tasks'
    | '/x/dropdown'
    | '/x/editor-demo'
    | '/x/profiles'
    | '/x/sidebar'
    | '/x/todos'
    | '/'
    | '/communities'
    | '/communities/$id'
    | '/communities/create'
    | '/enrolments/$uid'
    | '/communities/create/course/enrolments'
    | '/communities/create/course/publish'
    | '/communities/create/course/select-courses'
    | '/communities/$id/articles'
    | '/communities/$id/courses'
    | '/communities/$id/events'
    | '/communities/$id/threads'
    | '/communities/create/course'
    | '/communities/$id/courses/$courseId/enrolments'
    | '/communities/create/$id/community/members'
    | '/communities/create/$id/community/publish'
    | '/communities/create/$id/community/settings'
    | '/communities/$id/courses/$courseId'
    | '/communities/$id/threads/$threadId'
    | '/communities/create/$id/community'
    | '/communities/create/$id/thread'
  id:
    | '__root__'
    | '/_learner'
    | '/login'
    | '/test'
    | '/_learner/calendar'
    | '/_learner/chat'
    | '/_learner/explore'
    | '/_learner/tasks'
    | '/x/dropdown'
    | '/x/editor-demo'
    | '/x/profiles'
    | '/x/sidebar'
    | '/x/todos'
    | '/_learner/'
    | '/_learner/communities/$id'
    | '/_learner/communities/'
    | '/_learner/communities/$id/events'
    | '/_learner/communities/create/course'
    | '/_learner/communities/$id/'
    | '/_learner/communities/create/'
    | '/_learner/enrolments/$uid/'
    | '/_learner/communities/$id/courses/$courseId'
    | '/_learner/communities/create/$id/community'
    | '/_learner/communities/create/course/enrolments'
    | '/_learner/communities/create/course/publish'
    | '/_learner/communities/create/course/select-courses'
    | '/_learner/communities/$id/articles/'
    | '/_learner/communities/$id/courses/'
    | '/_learner/communities/$id/events/'
    | '/_learner/communities/$id/threads/'
    | '/_learner/communities/create/course/'
    | '/_learner/communities/$id/courses/$courseId/enrolments'
    | '/_learner/communities/create/$id/community/members'
    | '/_learner/communities/create/$id/community/publish'
    | '/_learner/communities/create/$id/community/settings'
    | '/_learner/communities/$id/courses/$courseId/'
    | '/_learner/communities/$id/threads/$threadId/'
    | '/_learner/communities/create/$id/community/'
    | '/_learner/communities/create/$id/thread/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LearnerRoute: typeof LearnerRouteWithChildren
  LoginRoute: typeof LoginRoute
  TestRoute: typeof TestRoute
  XDropdownRoute: typeof XDropdownRoute
  XEditorDemoRoute: typeof XEditorDemoRoute
  XProfilesRoute: typeof XProfilesRoute
  XSidebarRoute: typeof XSidebarRoute
  XTodosRoute: typeof XTodosRoute
}

const rootRouteChildren: RootRouteChildren = {
  LearnerRoute: LearnerRouteWithChildren,
  LoginRoute: LoginRoute,
  TestRoute: TestRoute,
  XDropdownRoute: XDropdownRoute,
  XEditorDemoRoute: XEditorDemoRoute,
  XProfilesRoute: XProfilesRoute,
  XSidebarRoute: XSidebarRoute,
  XTodosRoute: XTodosRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_learner",
        "/login",
        "/test",
        "/x/dropdown",
        "/x/editor-demo",
        "/x/profiles",
        "/x/sidebar",
        "/x/todos"
      ]
    },
    "/_learner": {
      "filePath": "_learner.tsx",
      "children": [
        "/_learner/calendar",
        "/_learner/chat",
        "/_learner/explore",
        "/_learner/tasks",
        "/_learner/",
        "/_learner/communities/$id",
        "/_learner/communities/",
        "/_learner/communities/create/course",
        "/_learner/communities/create/",
        "/_learner/enrolments/$uid/",
        "/_learner/communities/create/$id/community",
        "/_learner/communities/create/$id/thread/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/test": {
      "filePath": "test.tsx"
    },
    "/_learner/calendar": {
      "filePath": "_learner/calendar.tsx",
      "parent": "/_learner"
    },
    "/_learner/chat": {
      "filePath": "_learner/chat.tsx",
      "parent": "/_learner"
    },
    "/_learner/explore": {
      "filePath": "_learner/explore.tsx",
      "parent": "/_learner"
    },
    "/_learner/tasks": {
      "filePath": "_learner/tasks.tsx",
      "parent": "/_learner"
    },
    "/x/dropdown": {
      "filePath": "x/dropdown.tsx"
    },
    "/x/editor-demo": {
      "filePath": "x/editor-demo.tsx"
    },
    "/x/profiles": {
      "filePath": "x/profiles.tsx"
    },
    "/x/sidebar": {
      "filePath": "x/sidebar.tsx"
    },
    "/x/todos": {
      "filePath": "x/todos.tsx"
    },
    "/_learner/": {
      "filePath": "_learner/index.tsx",
      "parent": "/_learner"
    },
    "/_learner/communities/$id": {
      "filePath": "_learner/communities/$id/route.tsx",
      "parent": "/_learner",
      "children": [
        "/_learner/communities/$id/events",
        "/_learner/communities/$id/",
        "/_learner/communities/$id/courses/$courseId",
        "/_learner/communities/$id/articles/",
        "/_learner/communities/$id/courses/",
        "/_learner/communities/$id/threads/",
        "/_learner/communities/$id/threads/$threadId/"
      ]
    },
    "/_learner/communities/": {
      "filePath": "_learner/communities/index.tsx",
      "parent": "/_learner"
    },
    "/_learner/communities/$id/events": {
      "filePath": "_learner/communities/$id/events/route.tsx",
      "parent": "/_learner/communities/$id",
      "children": [
        "/_learner/communities/$id/events/"
      ]
    },
    "/_learner/communities/create/course": {
      "filePath": "_learner/communities/create/course/route.tsx",
      "parent": "/_learner",
      "children": [
        "/_learner/communities/create/course/enrolments",
        "/_learner/communities/create/course/publish",
        "/_learner/communities/create/course/select-courses",
        "/_learner/communities/create/course/"
      ]
    },
    "/_learner/communities/$id/": {
      "filePath": "_learner/communities/$id/index.tsx",
      "parent": "/_learner/communities/$id"
    },
    "/_learner/communities/create/": {
      "filePath": "_learner/communities/create/index.tsx",
      "parent": "/_learner"
    },
    "/_learner/enrolments/$uid/": {
      "filePath": "_learner/enrolments/$uid.index.tsx",
      "parent": "/_learner"
    },
    "/_learner/communities/$id/courses/$courseId": {
      "filePath": "_learner/communities/$id/courses/$courseId.route.tsx",
      "parent": "/_learner/communities/$id",
      "children": [
        "/_learner/communities/$id/courses/$courseId/enrolments",
        "/_learner/communities/$id/courses/$courseId/"
      ]
    },
    "/_learner/communities/create/$id/community": {
      "filePath": "_learner/communities/create/$id/community/route.tsx",
      "parent": "/_learner",
      "children": [
        "/_learner/communities/create/$id/community/members",
        "/_learner/communities/create/$id/community/publish",
        "/_learner/communities/create/$id/community/settings",
        "/_learner/communities/create/$id/community/"
      ]
    },
    "/_learner/communities/create/course/enrolments": {
      "filePath": "_learner/communities/create/course/enrolments.tsx",
      "parent": "/_learner/communities/create/course"
    },
    "/_learner/communities/create/course/publish": {
      "filePath": "_learner/communities/create/course/publish.tsx",
      "parent": "/_learner/communities/create/course"
    },
    "/_learner/communities/create/course/select-courses": {
      "filePath": "_learner/communities/create/course/select-courses.tsx",
      "parent": "/_learner/communities/create/course"
    },
    "/_learner/communities/$id/articles/": {
      "filePath": "_learner/communities/$id/articles/index.tsx",
      "parent": "/_learner/communities/$id"
    },
    "/_learner/communities/$id/courses/": {
      "filePath": "_learner/communities/$id/courses/index.tsx",
      "parent": "/_learner/communities/$id"
    },
    "/_learner/communities/$id/events/": {
      "filePath": "_learner/communities/$id/events/index.tsx",
      "parent": "/_learner/communities/$id/events"
    },
    "/_learner/communities/$id/threads/": {
      "filePath": "_learner/communities/$id/threads/index.tsx",
      "parent": "/_learner/communities/$id"
    },
    "/_learner/communities/create/course/": {
      "filePath": "_learner/communities/create/course/index.tsx",
      "parent": "/_learner/communities/create/course"
    },
    "/_learner/communities/$id/courses/$courseId/enrolments": {
      "filePath": "_learner/communities/$id/courses/$courseId.enrolments.tsx",
      "parent": "/_learner/communities/$id/courses/$courseId"
    },
    "/_learner/communities/create/$id/community/members": {
      "filePath": "_learner/communities/create/$id/community/members.tsx",
      "parent": "/_learner/communities/create/$id/community"
    },
    "/_learner/communities/create/$id/community/publish": {
      "filePath": "_learner/communities/create/$id/community/publish.tsx",
      "parent": "/_learner/communities/create/$id/community"
    },
    "/_learner/communities/create/$id/community/settings": {
      "filePath": "_learner/communities/create/$id/community/settings.tsx",
      "parent": "/_learner/communities/create/$id/community"
    },
    "/_learner/communities/$id/courses/$courseId/": {
      "filePath": "_learner/communities/$id/courses/$courseId.index.tsx",
      "parent": "/_learner/communities/$id/courses/$courseId"
    },
    "/_learner/communities/$id/threads/$threadId/": {
      "filePath": "_learner/communities/$id/threads/$threadId.index.tsx",
      "parent": "/_learner/communities/$id"
    },
    "/_learner/communities/create/$id/community/": {
      "filePath": "_learner/communities/create/$id/community/index.tsx",
      "parent": "/_learner/communities/create/$id/community"
    },
    "/_learner/communities/create/$id/thread/": {
      "filePath": "_learner/communities/create/$id/thread/index.tsx",
      "parent": "/_learner"
    }
  }
}
ROUTE_MANIFEST_END */
