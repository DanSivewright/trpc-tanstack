/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LearnerImport } from './routes/_learner'
import { Route as AuthImport } from './routes/_auth'
import { Route as LearnerIndexImport } from './routes/_learner/index'
import { Route as LearnerTasksImport } from './routes/_learner/tasks'
import { Route as LearnerExploreImport } from './routes/_learner/explore'
import { Route as LearnerChatImport } from './routes/_learner/chat'
import { Route as LearnerCalendarImport } from './routes/_learner/calendar'
import { Route as AuthLoginImport } from './routes/_auth.login'
import { Route as LearnercommunitiesCommunitiesRouteImport } from './routes/_learner/(communities)/communities.route'
import { Route as LearnercommunitiesCommunitiesIndexImport } from './routes/_learner/(communities)/communities.index'
import { Route as LearnercommunitiesCommunitiesCreateImport } from './routes/_learner/(communities)/communities_.create'
import { Route as LearnercommunitiesCommunitiesIdRouteImport } from './routes/_learner/(communities)/communities.$id.route'
import { Route as LearnercommunitiesCommunitiesIdIndexImport } from './routes/_learner/(communities)/communities.$id.index'
import { Route as LearnercommunitiesCommunitiesCreateThreadImport } from './routes/_learner/(communities)/communities_.create.thread'
import { Route as LearnercommunitiesCommunitiesCreateCourseImport } from './routes/_learner/(communities)/communities_.create.course'
import { Route as LearnercommunitiesCommunitiesCreateCommunityImport } from './routes/_learner/(communities)/communities_.create.community'
import { Route as LearnercommunitiesCommunitiesCreateArticlesImport } from './routes/_learner/(communities)/communities_.create.articles'
import { Route as LearnercommunitiesCommunitiesIdWorkflowsImport } from './routes/_learner/(communities)/communities.$id.workflows'
import { Route as LearnercommunitiesCommunitiesIdThreadsImport } from './routes/_learner/(communities)/communities.$id.threads'
import { Route as LearnercommunitiesCommunitiesIdTasksImport } from './routes/_learner/(communities)/communities.$id.tasks'
import { Route as LearnercommunitiesCommunitiesIdResourcesImport } from './routes/_learner/(communities)/communities.$id.resources'
import { Route as LearnercommunitiesCommunitiesIdMembersImport } from './routes/_learner/(communities)/communities.$id.members'
import { Route as LearnercommunitiesCommunitiesIdCoursesImport } from './routes/_learner/(communities)/communities.$id.courses'
import { Route as LearnercommunitiesCommunitiesIdCalendarImport } from './routes/_learner/(communities)/communities.$id.calendar'
import { Route as LearnercommunitiesCommunitiesIdArticlesImport } from './routes/_learner/(communities)/communities.$id.articles'
import { Route as LearnercommunitiesCommunitiesIdAboutImport } from './routes/_learner/(communities)/communities.$id.about'

// Create/Update Routes

const LearnerRoute = LearnerImport.update({
  id: '/_learner',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const LearnerIndexRoute = LearnerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerTasksRoute = LearnerTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerExploreRoute = LearnerExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerChatRoute = LearnerChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerCalendarRoute = LearnerCalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => LearnerRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const LearnercommunitiesCommunitiesRouteRoute =
  LearnercommunitiesCommunitiesRouteImport.update({
    id: '/(communities)/communities',
    path: '/communities',
    getParentRoute: () => LearnerRoute,
  } as any)

const LearnercommunitiesCommunitiesIndexRoute =
  LearnercommunitiesCommunitiesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LearnercommunitiesCommunitiesRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesCreateRoute =
  LearnercommunitiesCommunitiesCreateImport.update({
    id: '/(communities)/communities_/create',
    path: '/communities/create',
    getParentRoute: () => LearnerRoute,
  } as any)

const LearnercommunitiesCommunitiesIdRouteRoute =
  LearnercommunitiesCommunitiesIdRouteImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => LearnercommunitiesCommunitiesRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdIndexRoute =
  LearnercommunitiesCommunitiesIdIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesCreateThreadRoute =
  LearnercommunitiesCommunitiesCreateThreadImport.update({
    id: '/thread',
    path: '/thread',
    getParentRoute: () => LearnercommunitiesCommunitiesCreateRoute,
  } as any)

const LearnercommunitiesCommunitiesCreateCourseRoute =
  LearnercommunitiesCommunitiesCreateCourseImport.update({
    id: '/course',
    path: '/course',
    getParentRoute: () => LearnercommunitiesCommunitiesCreateRoute,
  } as any)

const LearnercommunitiesCommunitiesCreateCommunityRoute =
  LearnercommunitiesCommunitiesCreateCommunityImport.update({
    id: '/community',
    path: '/community',
    getParentRoute: () => LearnercommunitiesCommunitiesCreateRoute,
  } as any)

const LearnercommunitiesCommunitiesCreateArticlesRoute =
  LearnercommunitiesCommunitiesCreateArticlesImport.update({
    id: '/articles',
    path: '/articles',
    getParentRoute: () => LearnercommunitiesCommunitiesCreateRoute,
  } as any)

const LearnercommunitiesCommunitiesIdWorkflowsRoute =
  LearnercommunitiesCommunitiesIdWorkflowsImport.update({
    id: '/workflows',
    path: '/workflows',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdThreadsRoute =
  LearnercommunitiesCommunitiesIdThreadsImport.update({
    id: '/threads',
    path: '/threads',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdTasksRoute =
  LearnercommunitiesCommunitiesIdTasksImport.update({
    id: '/tasks',
    path: '/tasks',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdResourcesRoute =
  LearnercommunitiesCommunitiesIdResourcesImport.update({
    id: '/resources',
    path: '/resources',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdMembersRoute =
  LearnercommunitiesCommunitiesIdMembersImport.update({
    id: '/members',
    path: '/members',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdCoursesRoute =
  LearnercommunitiesCommunitiesIdCoursesImport.update({
    id: '/courses',
    path: '/courses',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdCalendarRoute =
  LearnercommunitiesCommunitiesIdCalendarImport.update({
    id: '/calendar',
    path: '/calendar',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdArticlesRoute =
  LearnercommunitiesCommunitiesIdArticlesImport.update({
    id: '/articles',
    path: '/articles',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdAboutRoute =
  LearnercommunitiesCommunitiesIdAboutImport.update({
    id: '/about',
    path: '/about',
    getParentRoute: () => LearnercommunitiesCommunitiesIdRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_learner': {
      id: '/_learner'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LearnerImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_learner/calendar': {
      id: '/_learner/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof LearnerCalendarImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/chat': {
      id: '/_learner/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof LearnerChatImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/explore': {
      id: '/_learner/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof LearnerExploreImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/tasks': {
      id: '/_learner/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof LearnerTasksImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/': {
      id: '/_learner/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LearnerIndexImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/(communities)/communities': {
      id: '/_learner/(communities)/communities'
      path: '/communities'
      fullPath: '/communities'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesRouteImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/(communities)/communities/$id': {
      id: '/_learner/(communities)/communities/$id'
      path: '/$id'
      fullPath: '/communities/$id'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
      parentRoute: typeof LearnercommunitiesCommunitiesRouteImport
    }
    '/_learner/(communities)/communities_/create': {
      id: '/_learner/(communities)/communities_/create'
      path: '/communities/create'
      fullPath: '/communities/create'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesCreateImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/(communities)/communities/': {
      id: '/_learner/(communities)/communities/'
      path: '/'
      fullPath: '/communities/'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIndexImport
      parentRoute: typeof LearnercommunitiesCommunitiesRouteImport
    }
    '/_learner/(communities)/communities/$id/about': {
      id: '/_learner/(communities)/communities/$id/about'
      path: '/about'
      fullPath: '/communities/$id/about'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdAboutImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities/$id/articles': {
      id: '/_learner/(communities)/communities/$id/articles'
      path: '/articles'
      fullPath: '/communities/$id/articles'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdArticlesImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities/$id/calendar': {
      id: '/_learner/(communities)/communities/$id/calendar'
      path: '/calendar'
      fullPath: '/communities/$id/calendar'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdCalendarImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities/$id/courses': {
      id: '/_learner/(communities)/communities/$id/courses'
      path: '/courses'
      fullPath: '/communities/$id/courses'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdCoursesImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities/$id/members': {
      id: '/_learner/(communities)/communities/$id/members'
      path: '/members'
      fullPath: '/communities/$id/members'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdMembersImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities/$id/resources': {
      id: '/_learner/(communities)/communities/$id/resources'
      path: '/resources'
      fullPath: '/communities/$id/resources'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdResourcesImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities/$id/tasks': {
      id: '/_learner/(communities)/communities/$id/tasks'
      path: '/tasks'
      fullPath: '/communities/$id/tasks'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdTasksImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities/$id/threads': {
      id: '/_learner/(communities)/communities/$id/threads'
      path: '/threads'
      fullPath: '/communities/$id/threads'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdThreadsImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities/$id/workflows': {
      id: '/_learner/(communities)/communities/$id/workflows'
      path: '/workflows'
      fullPath: '/communities/$id/workflows'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdWorkflowsImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
    '/_learner/(communities)/communities_/create/articles': {
      id: '/_learner/(communities)/communities_/create/articles'
      path: '/articles'
      fullPath: '/communities/create/articles'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesCreateArticlesImport
      parentRoute: typeof LearnercommunitiesCommunitiesCreateImport
    }
    '/_learner/(communities)/communities_/create/community': {
      id: '/_learner/(communities)/communities_/create/community'
      path: '/community'
      fullPath: '/communities/create/community'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesCreateCommunityImport
      parentRoute: typeof LearnercommunitiesCommunitiesCreateImport
    }
    '/_learner/(communities)/communities_/create/course': {
      id: '/_learner/(communities)/communities_/create/course'
      path: '/course'
      fullPath: '/communities/create/course'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesCreateCourseImport
      parentRoute: typeof LearnercommunitiesCommunitiesCreateImport
    }
    '/_learner/(communities)/communities_/create/thread': {
      id: '/_learner/(communities)/communities_/create/thread'
      path: '/thread'
      fullPath: '/communities/create/thread'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesCreateThreadImport
      parentRoute: typeof LearnercommunitiesCommunitiesCreateImport
    }
    '/_learner/(communities)/communities/$id/': {
      id: '/_learner/(communities)/communities/$id/'
      path: '/'
      fullPath: '/communities/$id/'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdIndexImport
      parentRoute: typeof LearnercommunitiesCommunitiesIdRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface LearnercommunitiesCommunitiesIdRouteRouteChildren {
  LearnercommunitiesCommunitiesIdAboutRoute: typeof LearnercommunitiesCommunitiesIdAboutRoute
  LearnercommunitiesCommunitiesIdArticlesRoute: typeof LearnercommunitiesCommunitiesIdArticlesRoute
  LearnercommunitiesCommunitiesIdCalendarRoute: typeof LearnercommunitiesCommunitiesIdCalendarRoute
  LearnercommunitiesCommunitiesIdCoursesRoute: typeof LearnercommunitiesCommunitiesIdCoursesRoute
  LearnercommunitiesCommunitiesIdMembersRoute: typeof LearnercommunitiesCommunitiesIdMembersRoute
  LearnercommunitiesCommunitiesIdResourcesRoute: typeof LearnercommunitiesCommunitiesIdResourcesRoute
  LearnercommunitiesCommunitiesIdTasksRoute: typeof LearnercommunitiesCommunitiesIdTasksRoute
  LearnercommunitiesCommunitiesIdThreadsRoute: typeof LearnercommunitiesCommunitiesIdThreadsRoute
  LearnercommunitiesCommunitiesIdWorkflowsRoute: typeof LearnercommunitiesCommunitiesIdWorkflowsRoute
  LearnercommunitiesCommunitiesIdIndexRoute: typeof LearnercommunitiesCommunitiesIdIndexRoute
}

const LearnercommunitiesCommunitiesIdRouteRouteChildren: LearnercommunitiesCommunitiesIdRouteRouteChildren =
  {
    LearnercommunitiesCommunitiesIdAboutRoute:
      LearnercommunitiesCommunitiesIdAboutRoute,
    LearnercommunitiesCommunitiesIdArticlesRoute:
      LearnercommunitiesCommunitiesIdArticlesRoute,
    LearnercommunitiesCommunitiesIdCalendarRoute:
      LearnercommunitiesCommunitiesIdCalendarRoute,
    LearnercommunitiesCommunitiesIdCoursesRoute:
      LearnercommunitiesCommunitiesIdCoursesRoute,
    LearnercommunitiesCommunitiesIdMembersRoute:
      LearnercommunitiesCommunitiesIdMembersRoute,
    LearnercommunitiesCommunitiesIdResourcesRoute:
      LearnercommunitiesCommunitiesIdResourcesRoute,
    LearnercommunitiesCommunitiesIdTasksRoute:
      LearnercommunitiesCommunitiesIdTasksRoute,
    LearnercommunitiesCommunitiesIdThreadsRoute:
      LearnercommunitiesCommunitiesIdThreadsRoute,
    LearnercommunitiesCommunitiesIdWorkflowsRoute:
      LearnercommunitiesCommunitiesIdWorkflowsRoute,
    LearnercommunitiesCommunitiesIdIndexRoute:
      LearnercommunitiesCommunitiesIdIndexRoute,
  }

const LearnercommunitiesCommunitiesIdRouteRouteWithChildren =
  LearnercommunitiesCommunitiesIdRouteRoute._addFileChildren(
    LearnercommunitiesCommunitiesIdRouteRouteChildren,
  )

interface LearnercommunitiesCommunitiesRouteRouteChildren {
  LearnercommunitiesCommunitiesIdRouteRoute: typeof LearnercommunitiesCommunitiesIdRouteRouteWithChildren
  LearnercommunitiesCommunitiesIndexRoute: typeof LearnercommunitiesCommunitiesIndexRoute
}

const LearnercommunitiesCommunitiesRouteRouteChildren: LearnercommunitiesCommunitiesRouteRouteChildren =
  {
    LearnercommunitiesCommunitiesIdRouteRoute:
      LearnercommunitiesCommunitiesIdRouteRouteWithChildren,
    LearnercommunitiesCommunitiesIndexRoute:
      LearnercommunitiesCommunitiesIndexRoute,
  }

const LearnercommunitiesCommunitiesRouteRouteWithChildren =
  LearnercommunitiesCommunitiesRouteRoute._addFileChildren(
    LearnercommunitiesCommunitiesRouteRouteChildren,
  )

interface LearnercommunitiesCommunitiesCreateRouteChildren {
  LearnercommunitiesCommunitiesCreateArticlesRoute: typeof LearnercommunitiesCommunitiesCreateArticlesRoute
  LearnercommunitiesCommunitiesCreateCommunityRoute: typeof LearnercommunitiesCommunitiesCreateCommunityRoute
  LearnercommunitiesCommunitiesCreateCourseRoute: typeof LearnercommunitiesCommunitiesCreateCourseRoute
  LearnercommunitiesCommunitiesCreateThreadRoute: typeof LearnercommunitiesCommunitiesCreateThreadRoute
}

const LearnercommunitiesCommunitiesCreateRouteChildren: LearnercommunitiesCommunitiesCreateRouteChildren =
  {
    LearnercommunitiesCommunitiesCreateArticlesRoute:
      LearnercommunitiesCommunitiesCreateArticlesRoute,
    LearnercommunitiesCommunitiesCreateCommunityRoute:
      LearnercommunitiesCommunitiesCreateCommunityRoute,
    LearnercommunitiesCommunitiesCreateCourseRoute:
      LearnercommunitiesCommunitiesCreateCourseRoute,
    LearnercommunitiesCommunitiesCreateThreadRoute:
      LearnercommunitiesCommunitiesCreateThreadRoute,
  }

const LearnercommunitiesCommunitiesCreateRouteWithChildren =
  LearnercommunitiesCommunitiesCreateRoute._addFileChildren(
    LearnercommunitiesCommunitiesCreateRouteChildren,
  )

interface LearnerRouteChildren {
  LearnerCalendarRoute: typeof LearnerCalendarRoute
  LearnerChatRoute: typeof LearnerChatRoute
  LearnerExploreRoute: typeof LearnerExploreRoute
  LearnerTasksRoute: typeof LearnerTasksRoute
  LearnerIndexRoute: typeof LearnerIndexRoute
  LearnercommunitiesCommunitiesRouteRoute: typeof LearnercommunitiesCommunitiesRouteRouteWithChildren
  LearnercommunitiesCommunitiesCreateRoute: typeof LearnercommunitiesCommunitiesCreateRouteWithChildren
}

const LearnerRouteChildren: LearnerRouteChildren = {
  LearnerCalendarRoute: LearnerCalendarRoute,
  LearnerChatRoute: LearnerChatRoute,
  LearnerExploreRoute: LearnerExploreRoute,
  LearnerTasksRoute: LearnerTasksRoute,
  LearnerIndexRoute: LearnerIndexRoute,
  LearnercommunitiesCommunitiesRouteRoute:
    LearnercommunitiesCommunitiesRouteRouteWithChildren,
  LearnercommunitiesCommunitiesCreateRoute:
    LearnercommunitiesCommunitiesCreateRouteWithChildren,
}

const LearnerRouteWithChildren =
  LearnerRoute._addFileChildren(LearnerRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LearnerRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/calendar': typeof LearnerCalendarRoute
  '/chat': typeof LearnerChatRoute
  '/explore': typeof LearnerExploreRoute
  '/tasks': typeof LearnerTasksRoute
  '/': typeof LearnerIndexRoute
  '/communities': typeof LearnercommunitiesCommunitiesRouteRouteWithChildren
  '/communities/$id': typeof LearnercommunitiesCommunitiesIdRouteRouteWithChildren
  '/communities/create': typeof LearnercommunitiesCommunitiesCreateRouteWithChildren
  '/communities/': typeof LearnercommunitiesCommunitiesIndexRoute
  '/communities/$id/about': typeof LearnercommunitiesCommunitiesIdAboutRoute
  '/communities/$id/articles': typeof LearnercommunitiesCommunitiesIdArticlesRoute
  '/communities/$id/calendar': typeof LearnercommunitiesCommunitiesIdCalendarRoute
  '/communities/$id/courses': typeof LearnercommunitiesCommunitiesIdCoursesRoute
  '/communities/$id/members': typeof LearnercommunitiesCommunitiesIdMembersRoute
  '/communities/$id/resources': typeof LearnercommunitiesCommunitiesIdResourcesRoute
  '/communities/$id/tasks': typeof LearnercommunitiesCommunitiesIdTasksRoute
  '/communities/$id/threads': typeof LearnercommunitiesCommunitiesIdThreadsRoute
  '/communities/$id/workflows': typeof LearnercommunitiesCommunitiesIdWorkflowsRoute
  '/communities/create/articles': typeof LearnercommunitiesCommunitiesCreateArticlesRoute
  '/communities/create/community': typeof LearnercommunitiesCommunitiesCreateCommunityRoute
  '/communities/create/course': typeof LearnercommunitiesCommunitiesCreateCourseRoute
  '/communities/create/thread': typeof LearnercommunitiesCommunitiesCreateThreadRoute
  '/communities/$id/': typeof LearnercommunitiesCommunitiesIdIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/calendar': typeof LearnerCalendarRoute
  '/chat': typeof LearnerChatRoute
  '/explore': typeof LearnerExploreRoute
  '/tasks': typeof LearnerTasksRoute
  '/': typeof LearnerIndexRoute
  '/communities/create': typeof LearnercommunitiesCommunitiesCreateRouteWithChildren
  '/communities': typeof LearnercommunitiesCommunitiesIndexRoute
  '/communities/$id/about': typeof LearnercommunitiesCommunitiesIdAboutRoute
  '/communities/$id/articles': typeof LearnercommunitiesCommunitiesIdArticlesRoute
  '/communities/$id/calendar': typeof LearnercommunitiesCommunitiesIdCalendarRoute
  '/communities/$id/courses': typeof LearnercommunitiesCommunitiesIdCoursesRoute
  '/communities/$id/members': typeof LearnercommunitiesCommunitiesIdMembersRoute
  '/communities/$id/resources': typeof LearnercommunitiesCommunitiesIdResourcesRoute
  '/communities/$id/tasks': typeof LearnercommunitiesCommunitiesIdTasksRoute
  '/communities/$id/threads': typeof LearnercommunitiesCommunitiesIdThreadsRoute
  '/communities/$id/workflows': typeof LearnercommunitiesCommunitiesIdWorkflowsRoute
  '/communities/create/articles': typeof LearnercommunitiesCommunitiesCreateArticlesRoute
  '/communities/create/community': typeof LearnercommunitiesCommunitiesCreateCommunityRoute
  '/communities/create/course': typeof LearnercommunitiesCommunitiesCreateCourseRoute
  '/communities/create/thread': typeof LearnercommunitiesCommunitiesCreateThreadRoute
  '/communities/$id': typeof LearnercommunitiesCommunitiesIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_learner': typeof LearnerRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_learner/calendar': typeof LearnerCalendarRoute
  '/_learner/chat': typeof LearnerChatRoute
  '/_learner/explore': typeof LearnerExploreRoute
  '/_learner/tasks': typeof LearnerTasksRoute
  '/_learner/': typeof LearnerIndexRoute
  '/_learner/(communities)/communities': typeof LearnercommunitiesCommunitiesRouteRouteWithChildren
  '/_learner/(communities)/communities/$id': typeof LearnercommunitiesCommunitiesIdRouteRouteWithChildren
  '/_learner/(communities)/communities_/create': typeof LearnercommunitiesCommunitiesCreateRouteWithChildren
  '/_learner/(communities)/communities/': typeof LearnercommunitiesCommunitiesIndexRoute
  '/_learner/(communities)/communities/$id/about': typeof LearnercommunitiesCommunitiesIdAboutRoute
  '/_learner/(communities)/communities/$id/articles': typeof LearnercommunitiesCommunitiesIdArticlesRoute
  '/_learner/(communities)/communities/$id/calendar': typeof LearnercommunitiesCommunitiesIdCalendarRoute
  '/_learner/(communities)/communities/$id/courses': typeof LearnercommunitiesCommunitiesIdCoursesRoute
  '/_learner/(communities)/communities/$id/members': typeof LearnercommunitiesCommunitiesIdMembersRoute
  '/_learner/(communities)/communities/$id/resources': typeof LearnercommunitiesCommunitiesIdResourcesRoute
  '/_learner/(communities)/communities/$id/tasks': typeof LearnercommunitiesCommunitiesIdTasksRoute
  '/_learner/(communities)/communities/$id/threads': typeof LearnercommunitiesCommunitiesIdThreadsRoute
  '/_learner/(communities)/communities/$id/workflows': typeof LearnercommunitiesCommunitiesIdWorkflowsRoute
  '/_learner/(communities)/communities_/create/articles': typeof LearnercommunitiesCommunitiesCreateArticlesRoute
  '/_learner/(communities)/communities_/create/community': typeof LearnercommunitiesCommunitiesCreateCommunityRoute
  '/_learner/(communities)/communities_/create/course': typeof LearnercommunitiesCommunitiesCreateCourseRoute
  '/_learner/(communities)/communities_/create/thread': typeof LearnercommunitiesCommunitiesCreateThreadRoute
  '/_learner/(communities)/communities/$id/': typeof LearnercommunitiesCommunitiesIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/calendar'
    | '/chat'
    | '/explore'
    | '/tasks'
    | '/'
    | '/communities'
    | '/communities/$id'
    | '/communities/create'
    | '/communities/'
    | '/communities/$id/about'
    | '/communities/$id/articles'
    | '/communities/$id/calendar'
    | '/communities/$id/courses'
    | '/communities/$id/members'
    | '/communities/$id/resources'
    | '/communities/$id/tasks'
    | '/communities/$id/threads'
    | '/communities/$id/workflows'
    | '/communities/create/articles'
    | '/communities/create/community'
    | '/communities/create/course'
    | '/communities/create/thread'
    | '/communities/$id/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/calendar'
    | '/chat'
    | '/explore'
    | '/tasks'
    | '/'
    | '/communities/create'
    | '/communities'
    | '/communities/$id/about'
    | '/communities/$id/articles'
    | '/communities/$id/calendar'
    | '/communities/$id/courses'
    | '/communities/$id/members'
    | '/communities/$id/resources'
    | '/communities/$id/tasks'
    | '/communities/$id/threads'
    | '/communities/$id/workflows'
    | '/communities/create/articles'
    | '/communities/create/community'
    | '/communities/create/course'
    | '/communities/create/thread'
    | '/communities/$id'
  id:
    | '__root__'
    | '/_auth'
    | '/_learner'
    | '/_auth/login'
    | '/_learner/calendar'
    | '/_learner/chat'
    | '/_learner/explore'
    | '/_learner/tasks'
    | '/_learner/'
    | '/_learner/(communities)/communities'
    | '/_learner/(communities)/communities/$id'
    | '/_learner/(communities)/communities_/create'
    | '/_learner/(communities)/communities/'
    | '/_learner/(communities)/communities/$id/about'
    | '/_learner/(communities)/communities/$id/articles'
    | '/_learner/(communities)/communities/$id/calendar'
    | '/_learner/(communities)/communities/$id/courses'
    | '/_learner/(communities)/communities/$id/members'
    | '/_learner/(communities)/communities/$id/resources'
    | '/_learner/(communities)/communities/$id/tasks'
    | '/_learner/(communities)/communities/$id/threads'
    | '/_learner/(communities)/communities/$id/workflows'
    | '/_learner/(communities)/communities_/create/articles'
    | '/_learner/(communities)/communities_/create/community'
    | '/_learner/(communities)/communities_/create/course'
    | '/_learner/(communities)/communities_/create/thread'
    | '/_learner/(communities)/communities/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LearnerRoute: typeof LearnerRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LearnerRoute: LearnerRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_learner"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login"
      ]
    },
    "/_learner": {
      "filePath": "_learner.tsx",
      "children": [
        "/_learner/calendar",
        "/_learner/chat",
        "/_learner/explore",
        "/_learner/tasks",
        "/_learner/",
        "/_learner/(communities)/communities",
        "/_learner/(communities)/communities_/create"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth.login.tsx",
      "parent": "/_auth"
    },
    "/_learner/calendar": {
      "filePath": "_learner/calendar.tsx",
      "parent": "/_learner"
    },
    "/_learner/chat": {
      "filePath": "_learner/chat.tsx",
      "parent": "/_learner"
    },
    "/_learner/explore": {
      "filePath": "_learner/explore.tsx",
      "parent": "/_learner"
    },
    "/_learner/tasks": {
      "filePath": "_learner/tasks.tsx",
      "parent": "/_learner"
    },
    "/_learner/": {
      "filePath": "_learner/index.tsx",
      "parent": "/_learner"
    },
    "/_learner/(communities)/communities": {
      "filePath": "_learner/(communities)/communities.route.tsx",
      "parent": "/_learner",
      "children": [
        "/_learner/(communities)/communities/$id",
        "/_learner/(communities)/communities/"
      ]
    },
    "/_learner/(communities)/communities/$id": {
      "filePath": "_learner/(communities)/communities.$id.route.tsx",
      "parent": "/_learner/(communities)/communities",
      "children": [
        "/_learner/(communities)/communities/$id/about",
        "/_learner/(communities)/communities/$id/articles",
        "/_learner/(communities)/communities/$id/calendar",
        "/_learner/(communities)/communities/$id/courses",
        "/_learner/(communities)/communities/$id/members",
        "/_learner/(communities)/communities/$id/resources",
        "/_learner/(communities)/communities/$id/tasks",
        "/_learner/(communities)/communities/$id/threads",
        "/_learner/(communities)/communities/$id/workflows",
        "/_learner/(communities)/communities/$id/"
      ]
    },
    "/_learner/(communities)/communities_/create": {
      "filePath": "_learner/(communities)/communities_.create.tsx",
      "parent": "/_learner",
      "children": [
        "/_learner/(communities)/communities_/create/articles",
        "/_learner/(communities)/communities_/create/community",
        "/_learner/(communities)/communities_/create/course",
        "/_learner/(communities)/communities_/create/thread"
      ]
    },
    "/_learner/(communities)/communities/": {
      "filePath": "_learner/(communities)/communities.index.tsx",
      "parent": "/_learner/(communities)/communities"
    },
    "/_learner/(communities)/communities/$id/about": {
      "filePath": "_learner/(communities)/communities.$id.about.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities/$id/articles": {
      "filePath": "_learner/(communities)/communities.$id.articles.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities/$id/calendar": {
      "filePath": "_learner/(communities)/communities.$id.calendar.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities/$id/courses": {
      "filePath": "_learner/(communities)/communities.$id.courses.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities/$id/members": {
      "filePath": "_learner/(communities)/communities.$id.members.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities/$id/resources": {
      "filePath": "_learner/(communities)/communities.$id.resources.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities/$id/tasks": {
      "filePath": "_learner/(communities)/communities.$id.tasks.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities/$id/threads": {
      "filePath": "_learner/(communities)/communities.$id.threads.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities/$id/workflows": {
      "filePath": "_learner/(communities)/communities.$id.workflows.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    },
    "/_learner/(communities)/communities_/create/articles": {
      "filePath": "_learner/(communities)/communities_.create.articles.tsx",
      "parent": "/_learner/(communities)/communities_/create"
    },
    "/_learner/(communities)/communities_/create/community": {
      "filePath": "_learner/(communities)/communities_.create.community.tsx",
      "parent": "/_learner/(communities)/communities_/create"
    },
    "/_learner/(communities)/communities_/create/course": {
      "filePath": "_learner/(communities)/communities_.create.course.tsx",
      "parent": "/_learner/(communities)/communities_/create"
    },
    "/_learner/(communities)/communities_/create/thread": {
      "filePath": "_learner/(communities)/communities_.create.thread.tsx",
      "parent": "/_learner/(communities)/communities_/create"
    },
    "/_learner/(communities)/communities/$id/": {
      "filePath": "_learner/(communities)/communities.$id.index.tsx",
      "parent": "/_learner/(communities)/communities/$id"
    }
  }
}
ROUTE_MANIFEST_END */
