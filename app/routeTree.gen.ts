/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LearnerImport } from './routes/_learner'
import { Route as AuthImport } from './routes/_auth'
import { Route as LearnerIndexImport } from './routes/_learner/index'
import { Route as LearnerTasksImport } from './routes/_learner/tasks'
import { Route as LearnerExploreImport } from './routes/_learner/explore'
import { Route as LearnerChatImport } from './routes/_learner/chat'
import { Route as LearnerCalendarImport } from './routes/_learner/calendar'
import { Route as AuthLoginImport } from './routes/_auth.login'
import { Route as LearnercommunitiesCommunitiesRouteImport } from './routes/_learner/(communities)/communities.route'
import { Route as LearnercommunitiesCommunitiesIndexImport } from './routes/_learner/(communities)/communities.index'
import { Route as LearnercommunitiesCommunitiesTodayImport } from './routes/_learner/(communities)/communities.today'
import { Route as LearnercommunitiesCommunitiesExploreImport } from './routes/_learner/(communities)/communities.explore'
import { Route as LearnercommunitiesCommunitiesIdImport } from './routes/_learner/(communities)/communities.$id'

// Create/Update Routes

const LearnerRoute = LearnerImport.update({
  id: '/_learner',
  getParentRoute: () => rootRoute,
} as any)

const AuthRoute = AuthImport.update({
  id: '/_auth',
  getParentRoute: () => rootRoute,
} as any)

const LearnerIndexRoute = LearnerIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerTasksRoute = LearnerTasksImport.update({
  id: '/tasks',
  path: '/tasks',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerExploreRoute = LearnerExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerChatRoute = LearnerChatImport.update({
  id: '/chat',
  path: '/chat',
  getParentRoute: () => LearnerRoute,
} as any)

const LearnerCalendarRoute = LearnerCalendarImport.update({
  id: '/calendar',
  path: '/calendar',
  getParentRoute: () => LearnerRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const LearnercommunitiesCommunitiesRouteRoute =
  LearnercommunitiesCommunitiesRouteImport.update({
    id: '/(communities)/communities',
    path: '/communities',
    getParentRoute: () => LearnerRoute,
  } as any)

const LearnercommunitiesCommunitiesIndexRoute =
  LearnercommunitiesCommunitiesIndexImport.update({
    id: '/',
    path: '/',
    getParentRoute: () => LearnercommunitiesCommunitiesRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesTodayRoute =
  LearnercommunitiesCommunitiesTodayImport.update({
    id: '/today',
    path: '/today',
    getParentRoute: () => LearnercommunitiesCommunitiesRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesExploreRoute =
  LearnercommunitiesCommunitiesExploreImport.update({
    id: '/explore',
    path: '/explore',
    getParentRoute: () => LearnercommunitiesCommunitiesRouteRoute,
  } as any)

const LearnercommunitiesCommunitiesIdRoute =
  LearnercommunitiesCommunitiesIdImport.update({
    id: '/$id',
    path: '/$id',
    getParentRoute: () => LearnercommunitiesCommunitiesRouteRoute,
  } as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_auth': {
      id: '/_auth'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_learner': {
      id: '/_learner'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof LearnerImport
      parentRoute: typeof rootRoute
    }
    '/_auth/login': {
      id: '/_auth/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/_learner/calendar': {
      id: '/_learner/calendar'
      path: '/calendar'
      fullPath: '/calendar'
      preLoaderRoute: typeof LearnerCalendarImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/chat': {
      id: '/_learner/chat'
      path: '/chat'
      fullPath: '/chat'
      preLoaderRoute: typeof LearnerChatImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/explore': {
      id: '/_learner/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof LearnerExploreImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/tasks': {
      id: '/_learner/tasks'
      path: '/tasks'
      fullPath: '/tasks'
      preLoaderRoute: typeof LearnerTasksImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/': {
      id: '/_learner/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof LearnerIndexImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/(communities)/communities': {
      id: '/_learner/(communities)/communities'
      path: '/communities'
      fullPath: '/communities'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesRouteImport
      parentRoute: typeof LearnerImport
    }
    '/_learner/(communities)/communities/$id': {
      id: '/_learner/(communities)/communities/$id'
      path: '/$id'
      fullPath: '/communities/$id'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIdImport
      parentRoute: typeof LearnercommunitiesCommunitiesRouteImport
    }
    '/_learner/(communities)/communities/explore': {
      id: '/_learner/(communities)/communities/explore'
      path: '/explore'
      fullPath: '/communities/explore'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesExploreImport
      parentRoute: typeof LearnercommunitiesCommunitiesRouteImport
    }
    '/_learner/(communities)/communities/today': {
      id: '/_learner/(communities)/communities/today'
      path: '/today'
      fullPath: '/communities/today'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesTodayImport
      parentRoute: typeof LearnercommunitiesCommunitiesRouteImport
    }
    '/_learner/(communities)/communities/': {
      id: '/_learner/(communities)/communities/'
      path: '/'
      fullPath: '/communities/'
      preLoaderRoute: typeof LearnercommunitiesCommunitiesIndexImport
      parentRoute: typeof LearnercommunitiesCommunitiesRouteImport
    }
  }
}

// Create and export the route tree

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

interface LearnercommunitiesCommunitiesRouteRouteChildren {
  LearnercommunitiesCommunitiesIdRoute: typeof LearnercommunitiesCommunitiesIdRoute
  LearnercommunitiesCommunitiesExploreRoute: typeof LearnercommunitiesCommunitiesExploreRoute
  LearnercommunitiesCommunitiesTodayRoute: typeof LearnercommunitiesCommunitiesTodayRoute
  LearnercommunitiesCommunitiesIndexRoute: typeof LearnercommunitiesCommunitiesIndexRoute
}

const LearnercommunitiesCommunitiesRouteRouteChildren: LearnercommunitiesCommunitiesRouteRouteChildren =
  {
    LearnercommunitiesCommunitiesIdRoute: LearnercommunitiesCommunitiesIdRoute,
    LearnercommunitiesCommunitiesExploreRoute:
      LearnercommunitiesCommunitiesExploreRoute,
    LearnercommunitiesCommunitiesTodayRoute:
      LearnercommunitiesCommunitiesTodayRoute,
    LearnercommunitiesCommunitiesIndexRoute:
      LearnercommunitiesCommunitiesIndexRoute,
  }

const LearnercommunitiesCommunitiesRouteRouteWithChildren =
  LearnercommunitiesCommunitiesRouteRoute._addFileChildren(
    LearnercommunitiesCommunitiesRouteRouteChildren,
  )

interface LearnerRouteChildren {
  LearnerCalendarRoute: typeof LearnerCalendarRoute
  LearnerChatRoute: typeof LearnerChatRoute
  LearnerExploreRoute: typeof LearnerExploreRoute
  LearnerTasksRoute: typeof LearnerTasksRoute
  LearnerIndexRoute: typeof LearnerIndexRoute
  LearnercommunitiesCommunitiesRouteRoute: typeof LearnercommunitiesCommunitiesRouteRouteWithChildren
}

const LearnerRouteChildren: LearnerRouteChildren = {
  LearnerCalendarRoute: LearnerCalendarRoute,
  LearnerChatRoute: LearnerChatRoute,
  LearnerExploreRoute: LearnerExploreRoute,
  LearnerTasksRoute: LearnerTasksRoute,
  LearnerIndexRoute: LearnerIndexRoute,
  LearnercommunitiesCommunitiesRouteRoute:
    LearnercommunitiesCommunitiesRouteRouteWithChildren,
}

const LearnerRouteWithChildren =
  LearnerRoute._addFileChildren(LearnerRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof LearnerRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/calendar': typeof LearnerCalendarRoute
  '/chat': typeof LearnerChatRoute
  '/explore': typeof LearnerExploreRoute
  '/tasks': typeof LearnerTasksRoute
  '/': typeof LearnerIndexRoute
  '/communities': typeof LearnercommunitiesCommunitiesRouteRouteWithChildren
  '/communities/$id': typeof LearnercommunitiesCommunitiesIdRoute
  '/communities/explore': typeof LearnercommunitiesCommunitiesExploreRoute
  '/communities/today': typeof LearnercommunitiesCommunitiesTodayRoute
  '/communities/': typeof LearnercommunitiesCommunitiesIndexRoute
}

export interface FileRoutesByTo {
  '': typeof AuthRouteWithChildren
  '/login': typeof AuthLoginRoute
  '/calendar': typeof LearnerCalendarRoute
  '/chat': typeof LearnerChatRoute
  '/explore': typeof LearnerExploreRoute
  '/tasks': typeof LearnerTasksRoute
  '/': typeof LearnerIndexRoute
  '/communities/$id': typeof LearnercommunitiesCommunitiesIdRoute
  '/communities/explore': typeof LearnercommunitiesCommunitiesExploreRoute
  '/communities/today': typeof LearnercommunitiesCommunitiesTodayRoute
  '/communities': typeof LearnercommunitiesCommunitiesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_auth': typeof AuthRouteWithChildren
  '/_learner': typeof LearnerRouteWithChildren
  '/_auth/login': typeof AuthLoginRoute
  '/_learner/calendar': typeof LearnerCalendarRoute
  '/_learner/chat': typeof LearnerChatRoute
  '/_learner/explore': typeof LearnerExploreRoute
  '/_learner/tasks': typeof LearnerTasksRoute
  '/_learner/': typeof LearnerIndexRoute
  '/_learner/(communities)/communities': typeof LearnercommunitiesCommunitiesRouteRouteWithChildren
  '/_learner/(communities)/communities/$id': typeof LearnercommunitiesCommunitiesIdRoute
  '/_learner/(communities)/communities/explore': typeof LearnercommunitiesCommunitiesExploreRoute
  '/_learner/(communities)/communities/today': typeof LearnercommunitiesCommunitiesTodayRoute
  '/_learner/(communities)/communities/': typeof LearnercommunitiesCommunitiesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/login'
    | '/calendar'
    | '/chat'
    | '/explore'
    | '/tasks'
    | '/'
    | '/communities'
    | '/communities/$id'
    | '/communities/explore'
    | '/communities/today'
    | '/communities/'
  fileRoutesByTo: FileRoutesByTo
  to:
    | ''
    | '/login'
    | '/calendar'
    | '/chat'
    | '/explore'
    | '/tasks'
    | '/'
    | '/communities/$id'
    | '/communities/explore'
    | '/communities/today'
    | '/communities'
  id:
    | '__root__'
    | '/_auth'
    | '/_learner'
    | '/_auth/login'
    | '/_learner/calendar'
    | '/_learner/chat'
    | '/_learner/explore'
    | '/_learner/tasks'
    | '/_learner/'
    | '/_learner/(communities)/communities'
    | '/_learner/(communities)/communities/$id'
    | '/_learner/(communities)/communities/explore'
    | '/_learner/(communities)/communities/today'
    | '/_learner/(communities)/communities/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  AuthRoute: typeof AuthRouteWithChildren
  LearnerRoute: typeof LearnerRouteWithChildren
}

const rootRouteChildren: RootRouteChildren = {
  AuthRoute: AuthRouteWithChildren,
  LearnerRoute: LearnerRouteWithChildren,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_auth",
        "/_learner"
      ]
    },
    "/_auth": {
      "filePath": "_auth.tsx",
      "children": [
        "/_auth/login"
      ]
    },
    "/_learner": {
      "filePath": "_learner.tsx",
      "children": [
        "/_learner/calendar",
        "/_learner/chat",
        "/_learner/explore",
        "/_learner/tasks",
        "/_learner/",
        "/_learner/(communities)/communities"
      ]
    },
    "/_auth/login": {
      "filePath": "_auth.login.tsx",
      "parent": "/_auth"
    },
    "/_learner/calendar": {
      "filePath": "_learner/calendar.tsx",
      "parent": "/_learner"
    },
    "/_learner/chat": {
      "filePath": "_learner/chat.tsx",
      "parent": "/_learner"
    },
    "/_learner/explore": {
      "filePath": "_learner/explore.tsx",
      "parent": "/_learner"
    },
    "/_learner/tasks": {
      "filePath": "_learner/tasks.tsx",
      "parent": "/_learner"
    },
    "/_learner/": {
      "filePath": "_learner/index.tsx",
      "parent": "/_learner"
    },
    "/_learner/(communities)/communities": {
      "filePath": "_learner/(communities)/communities.route.tsx",
      "parent": "/_learner",
      "children": [
        "/_learner/(communities)/communities/$id",
        "/_learner/(communities)/communities/explore",
        "/_learner/(communities)/communities/today",
        "/_learner/(communities)/communities/"
      ]
    },
    "/_learner/(communities)/communities/$id": {
      "filePath": "_learner/(communities)/communities.$id.tsx",
      "parent": "/_learner/(communities)/communities"
    },
    "/_learner/(communities)/communities/explore": {
      "filePath": "_learner/(communities)/communities.explore.tsx",
      "parent": "/_learner/(communities)/communities"
    },
    "/_learner/(communities)/communities/today": {
      "filePath": "_learner/(communities)/communities.today.tsx",
      "parent": "/_learner/(communities)/communities"
    },
    "/_learner/(communities)/communities/": {
      "filePath": "_learner/(communities)/communities.index.tsx",
      "parent": "/_learner/(communities)/communities"
    }
  }
}
ROUTE_MANIFEST_END */
