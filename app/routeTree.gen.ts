/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as TeamsImport } from './routes/teams'
import { Route as LoginImport } from './routes/login'
import { Route as ExploreImport } from './routes/explore'
import { Route as CommunitiesImport } from './routes/communities'
import { Route as IndexImport } from './routes/index'
import { Route as EnrolmentsUidImport } from './routes/enrolments.$uid'

// Create/Update Routes

const TeamsRoute = TeamsImport.update({
  id: '/teams',
  path: '/teams',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const ExploreRoute = ExploreImport.update({
  id: '/explore',
  path: '/explore',
  getParentRoute: () => rootRoute,
} as any)

const CommunitiesRoute = CommunitiesImport.update({
  id: '/communities',
  path: '/communities',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const EnrolmentsUidRoute = EnrolmentsUidImport.update({
  id: '/enrolments/$uid',
  path: '/enrolments/$uid',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/communities': {
      id: '/communities'
      path: '/communities'
      fullPath: '/communities'
      preLoaderRoute: typeof CommunitiesImport
      parentRoute: typeof rootRoute
    }
    '/explore': {
      id: '/explore'
      path: '/explore'
      fullPath: '/explore'
      preLoaderRoute: typeof ExploreImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/teams': {
      id: '/teams'
      path: '/teams'
      fullPath: '/teams'
      preLoaderRoute: typeof TeamsImport
      parentRoute: typeof rootRoute
    }
    '/enrolments/$uid': {
      id: '/enrolments/$uid'
      path: '/enrolments/$uid'
      fullPath: '/enrolments/$uid'
      preLoaderRoute: typeof EnrolmentsUidImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/communities': typeof CommunitiesRoute
  '/explore': typeof ExploreRoute
  '/login': typeof LoginRoute
  '/teams': typeof TeamsRoute
  '/enrolments/$uid': typeof EnrolmentsUidRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/communities': typeof CommunitiesRoute
  '/explore': typeof ExploreRoute
  '/login': typeof LoginRoute
  '/teams': typeof TeamsRoute
  '/enrolments/$uid': typeof EnrolmentsUidRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/communities': typeof CommunitiesRoute
  '/explore': typeof ExploreRoute
  '/login': typeof LoginRoute
  '/teams': typeof TeamsRoute
  '/enrolments/$uid': typeof EnrolmentsUidRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/communities'
    | '/explore'
    | '/login'
    | '/teams'
    | '/enrolments/$uid'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/communities'
    | '/explore'
    | '/login'
    | '/teams'
    | '/enrolments/$uid'
  id:
    | '__root__'
    | '/'
    | '/communities'
    | '/explore'
    | '/login'
    | '/teams'
    | '/enrolments/$uid'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  CommunitiesRoute: typeof CommunitiesRoute
  ExploreRoute: typeof ExploreRoute
  LoginRoute: typeof LoginRoute
  TeamsRoute: typeof TeamsRoute
  EnrolmentsUidRoute: typeof EnrolmentsUidRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  CommunitiesRoute: CommunitiesRoute,
  ExploreRoute: ExploreRoute,
  LoginRoute: LoginRoute,
  TeamsRoute: TeamsRoute,
  EnrolmentsUidRoute: EnrolmentsUidRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/communities",
        "/explore",
        "/login",
        "/teams",
        "/enrolments/$uid"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/communities": {
      "filePath": "communities.tsx"
    },
    "/explore": {
      "filePath": "explore.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/teams": {
      "filePath": "teams.tsx"
    },
    "/enrolments/$uid": {
      "filePath": "enrolments.$uid.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
